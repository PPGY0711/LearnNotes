
/**
 * @author Administrator
 *
 */
public class Test {
	/**
	 * @param args
	 */
	public static void main(String[] args) {
//		System.out.println("hello world!!!!");
//		System.out.println("12345");
		//中文注释
//		int i = 0; //声明并初始化变量
//		i = 1;
//		int k = 10;
//		i = k;
//		short s = 9;
//		short s0 = 11;
//		s0 = s;
//		System.out.println(i);
//		System.out.println(s);
//		
//		byte b = 1;
//		int m = b;//byte类型可以给int赋值
		
//		int i = 0;
//		byte m = i;	//这种异常叫做编译期异常，只有在javac的时候发现,但是在集成开发环境中提示错误了。
//		
////		
//		int i = 1;
//		short s = 2;
//		byte b = 3;
//		 //问题，最后得到的数字6是一个什么声明类型的呢？在计算过程中i,s,b这3个变量会做数据类型的转换吗？
//		//计算过程中，整数类型是int的范围最大，因此s,b分别先被转换成int类型，然后进行+的运算，最终的结果是int类型数据。
//		char c = 'a';
//		int res = c + s; //char字符作为数字进行数学运算的时候，转化为相对应的ASCII码的值再进行相应的计算。
//		System.out.println(res);
//		
//		String str = "abc";
//		String str0 = "1" + 1 + 2 + 3;
//		//当把任何基本类型的值和字符串值进行连接运算时（+）,基本类型的值将自动转化为字符串类型
//		String str1 = 1 + 2 + 3 + "0"; //str1="60"
//		String str2 = 3.5f + "";//str2 = "3.5"，这不失为一种将浮点数转化为字符串类型的方法
//		System.out.println(str+i);
//		System.out.println(str2);
//		
//		//注意：当有一系列的+的运算的时候，如果某个部分其中含有字符串，那么这个字符串前边挨着的+开始一直往后就是要按照字符串拼接去看
//		String str3 = 1 + 3 + 5 + "a" + 2 + 6;
//		System.out.println(str3);
//		
//		byte b = 9;
//		int i = b;
//		//以上两种属于正常隐式转换
//		
//		int k = 7;
//		byte b0 = (byte)k;
////		//这个是强制转换数据类型，转换的数据类型要用英文的小括号括起来
//		String str = "h" + "e" + "llo";
//		System.out.println(str);
//	
//		int m = 1;
//		int n = 2;
//		System.out.println(m>n?m:n); //输出m,n中较大的数
//
//		int k = 0;
//		System.out.println(m>n? (m>k?m:k):(n>k?n:k));
//	
//	int[] ii;//声明一个int的数组
//	int iii[];//另一种声明方法
	
	int[] ii = new int[4];//声明一个能放4个int类型数据，动态初始化
	int[] ii0 = new int[] {1,2,3,4};//声明一个存放了1,2,3,4的数组，静态初始化
	
	String[] strs = new String[] {"a","E","C"};
	//数组内的元素都有一个引用的元素下标，这个的下标是一个数字
	System.out.println(strs[1]);
	System.out.println(strs.length);
	System.out.println(ii[0]);
	}
}
